name: build
on:
  push:
    branches:
      - '*'
    tags:
      - '*'
  pull_request:
    branches:
      - 'master'

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: 'Windows x64'
            os: windows-2019
            triplet: x64-windows
            vcpkg_dir: '${{ github.workspace }}/vcpkg'
            vcpkg_export_dir: 'C:\vcpkg_export'
            suffix: 'windows-win32'
            generator: 'Visual Studio 16 2019'
            arch: '-A x64'
    steps:
      - name: Checkout
        uses: actions/checkout@v1
        with:
          submodules: true
      - name: vcpkg build
        id: vcpkg
        uses: johnwason/vcpkg-action@v5
        with:
          manifest-dir: ${{ github.workspace }} # Set to directory containing vcpkg.json
          triplet: ${{ matrix.triplet}}
          token: ${{ github.token }}

      - name: Export vcpkg packages
        shell: pwsh
        run: |
          if(Test-Path -Path "${{matrix.vcpkg_export_dir}}") {
            Remove-Item '${{matrix.vcpkg_export_dir}}' -Recurse
          }

          New-Item '${{matrix.vcpkg_export_dir}}/installed' -ItemType Directory

          Copy-Item './vcpkg_installed\*' -Destination '${{matrix.vcpkg_export_dir}}/installed' -Recurse
          Copy-Item '${{ matrix.vcpkg_dir }}/scripts' -Destination '${{matrix.vcpkg_export_dir}}' -Recurse
          Copy-Item '${{ matrix.vcpkg_dir }}/.vcpkg-root' -Destination '${{matrix.vcpkg_export_dir}}'
          7z.exe a export.7z '${{matrix.vcpkg_export_dir}}/installed'
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
            name: packages
            path: '${{matrix.vcpkg_export_dir}}/installed'
        
      - name: Release
        uses: ncipollo/release-action@v1
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          artifacts: ${{ steps.create_artifact.outputs.path }}
          allowUpdates: true
          artifactContentType: application/7zip
          bodyFile: changelog.txt
          draft: false
          omitBodyDuringUpdate: true
          omitNameDuringUpdate: true
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
